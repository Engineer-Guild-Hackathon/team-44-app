name: Vercel Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  push:
    branches:
      - main
    paths:
      - 'web/**'
      - '.github/workflows/**'

  pull_request:
    paths:
      - 'web/**'
      - '.github/workflows/**'
jobs:
  Deploy-Preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Install dependencies
        run: npm install

      - name: Pull Vercel Environment Information (preview)
        run: vercel pull --yes --environment=preview --token="$VERCEL_TOKEN"

      - name: Build Project Artifacts (preview)
        run: vercel build --token="$VERCEL_TOKEN"

      - name: Deploy Project Artifacts to Vercel (preview)
        run: vercel deploy --prebuilt --token="$VERCEL_TOKEN"

  Deploy-Production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Install dependencies
        run: npm install

      - name: Pull Vercel Environment Information (production)
        run: vercel pull --yes --environment=production --token="$VERCEL_TOKEN"

      - name: Build Project Artifacts (production)
        run: vercel build --prod --token="$VERCEL_TOKEN"

      - name: Deploy Project Artifacts to Vercel (production)
        run: vercel deploy --prebuilt --prod --token="$VERCEL_TOKEN"
