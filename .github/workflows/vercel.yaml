name: Vercel Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

permissions:
  contents: read
  pull-requests: write
  issues: write

on:
  push:
    branches:
      - main
    paths:
      - 'web/**'
      - '.github/workflows/**'

  pull_request:
    paths:
      - 'web/**'
      - '.github/workflows/**'
jobs:
  Deploy-Preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Install dependencies
        run: npm install

      - name: Pull Vercel Environment Information (preview)
        run: vercel pull --yes --environment=preview --token="$VERCEL_TOKEN"

      - name: Build Project Artifacts (preview)
        run: vercel build --token="$VERCEL_TOKEN"

      - id: vercel_deploy
        name: Deploy Project Artifacts to Vercel (preview)
        run: |
          set -o pipefail
          # run deploy and capture output
          vercel deploy --prebuilt --token="$VERCEL_TOKEN" 2>&1 | tee vercel-output.txt
          # try to extract a Vercel preview URL from output
          PREVIEW_URL=$(grep -Eo 'https?://[^[:space:]]+' vercel-output.txt | grep -E 'vercel.app|now.sh' | head -n1 || true)
          if [ -z "$PREVIEW_URL" ]; then
            PREVIEW_URL=$(grep -Eo 'https?://[^[:space:]]+' vercel-output.txt | head -n1 || true)
          fi
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT

      - name: Add preview URL to job summary
        run: |
          echo "## Vercel Preview" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "URL: ${{ steps.vercel_deploy.outputs.preview_url }}" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request'
        continue-on-error: true
        uses: actions/github-script@v6
        env:
          PREVIEW_URL: ${{ steps.vercel_deploy.outputs.preview_url }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = process.env.PREVIEW_URL || '';
            const pr = context.payload.pull_request;
            if (!pr) {
              core.info('No pull request found in context; skipping comment.');
            } else if (!url) {
              github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number, body: 'Vercel preview deployed, but could not parse the URL from the CLI output.' });
            } else {
              github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number, body: `Vercel preview deployed: ${url}` });
            }

  Deploy-Production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Install dependencies
        run: npm install

      - name: Pull Vercel Environment Information (production)
        run: vercel pull --yes --environment=production --token="$VERCEL_TOKEN"

      - name: Build Project Artifacts (production)
        run: vercel build --prod --token="$VERCEL_TOKEN"

      - name: Deploy Project Artifacts to Vercel (production)
        run: vercel deploy --prebuilt --prod --token="$VERCEL_TOKEN"
